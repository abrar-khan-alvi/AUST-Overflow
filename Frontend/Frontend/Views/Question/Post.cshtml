@{
    var userId = Session["UserId"];
    var userName = Session["UserName"];
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ask Question</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Custom_Contents/Post_styles.css" />
    <!-- Include TinyMCE with API key -->
    <script src="https://cdn.tiny.cloud/1/ekmrv3s60wmxq6wsj7471uw5q6f3falk5lq4x0t640o58li8/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
</head>
<body>
    <div class="container">
        <h1 class="text-center">Ask Question</h1>
        <form id="questionForm">
            <div class="form-group">
                <label for="questionName">Write your question:</label>
                <input type="text" class="form-control" id="questionName" placeholder="Enter question name">
            </div>
            <div class="form-group">
                <label for="tagline">Taglines:</label>
                <input type="text" class="form-control" id="tagline" placeholder="e.g., javascript, html, css" required>
            </div>
            <div class="form-group">
                <label for="body">Discussion:</label>
                <textarea id="body" placeholder="Write Text"></textarea>
            </div>
            <div class="form-group w-25">
                <label for="image">Upload Image</label>
                <div class="image-upload-wrapper" id="imageUploadWrapper">
                    <input type="file" class="form-control-file" id="image">
                    <div class="upload-text">Drag and drop an image or click to select</div>
                </div>
                <img id="imgPreview" class="img-preview mt-2 img-fluid" src="#" alt="Image Preview" style="display: none; width: 50%">
                <button id="clearImage" class="btn btn-secondary mt-2" style="display: none;">Clear Image</button>
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>

    <!-- Initialize TinyMCE -->
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'code',
            toolbar: 'undo redo | blocks | fontfamily fontsize | bold italic underline strikethrough | code | addcomment showcomments | align lineheight | checklist numlist bullist indent outdent | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
        });

    </script>

    <div class="loader" style="display:none;"></div>

    <script src="https://www.gstatic.com/firebasejs/8.3.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.3.1/firebase-database.js"></script>
    <script>
        // Your Firebase configuration
        var firebaseConfig = {
            apiKey: "AIzaSyAse483WtEgu5ODHwmJT_QwHzPBeN-tCMs",
            authDomain: "aust-overflow.firebaseapp.com",
            databaseURL: "https://aust-overflow-default-rtdb.firebaseio.com",
            projectId: "aust-overflow",
            storageBucket: "aust-overflow.appspot.com",
            messagingSenderId: "597727996516",
            appId: "1:597727996516:web:b61deb25e126e0ecd4cd71"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);

        // Access session variables from Razor view and embed in JavaScript
        var userId = '@userId';
        var userName = '@userName';

        // Image preview functionality
        document.getElementById('image').addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const imgPreview = document.getElementById('imgPreview');
                    const clearButton = document.getElementById('clearImage');
                    imgPreview.src = e.target.result;
                    imgPreview.style.display = 'block';
                    clearButton.style.display = 'block';
                };
                reader.readAsDataURL(file);
            }
        });

        // Clear image preview functionality
        document.getElementById('clearImage').addEventListener('click', function() {
            const imgPreview = document.getElementById('imgPreview');
            const fileInput = document.getElementById('image');
            const clearButton = document.getElementById('clearImage');

            // Clear the image preview
            imgPreview.src = '#';
            imgPreview.style.display = 'none';

            // Reset the file input
            fileInput.value = '';

            // Hide the clear button
            clearButton.style.display = 'none';
        });

        // Form submission handler
        document.getElementById('questionForm').addEventListener('submit', function (event) {
            event.preventDefault();
            showLoader();

            const questionName = document.getElementById('questionName').value;
            const tagline = document.getElementById('tagline').value;
            const body = tinymce.get('body').getContent();
            const image = document.getElementById('image').files[0];

            let imageUrl = "";

            if (image) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imageUrl = e.target.result;
                    savePostToFirebase(questionName, tagline, body, userId, imageUrl);
                };
                reader.readAsDataURL(image);
            } else {
                savePostToFirebase(questionName, tagline, body, userId, imageUrl);
            }
        });

        // Function to show loader
        function showLoader() {
            document.querySelector('.loader').style.display = 'block';
        }

        // Function to hide loader
        function hideLoader() {
            document.querySelector('.loader').style.display = 'none';
        }

        // Function to save post to Firebase
        function savePostToFirebase(questionName, tagline, body, userId, imageUrl) {
            const newPostRef = firebase.database().ref().child('posts').push();
            const newPostKey = newPostRef.key; // Get the generated key (postId)

            // Save postData under the new postId
            newPostRef.set({
                Title: questionName,
                taglines: tagline,
                content: body,
                userId: userId,
                imageUrl: imageUrl,
                upvote: {
                    'userId': 'user1'
                },      
                downvote: {
                    'userId':'user2'
                }
            })
            .then(() => {
                hideLoader(); // Hide loader after successful submission
                alert('Post submitted successfully!');
                document.getElementById('questionForm').reset();
                document.getElementById('imgPreview').style.display = 'none';
            })
            .catch(error => {
                alert('Error submitting post: ' + error.message);
            });
        }
    </script>
</body>
</html>
