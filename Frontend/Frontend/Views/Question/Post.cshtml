@{
    var userId = Session["UserId"];
    var userName = Session["UserName"];
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Post Question</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Custom_Contents/Post_styles.css" />
</head>
<body>
    <div class="container">
        <h1 class="text-center">Ask Question</h1>
        <form id="questionForm">
            <div class="form-group">
                <label for="questionName">Write your question:</label>
                <input type="text" class="form-control" id="questionName" placeholder="Enter question name">
            </div>
            <div class="form-group">
                <label for="tagline">Taglines:</label>
                <input type="text" class="form-control" id="tagline" placeholder="e.g., javascript, html, css" required>
            </div>
            <div class="form-group">
                <label for="body">Discussion:</label>
                <div class="toolbar">
                    <button type="button" class="btn btn-light btn-sm" onclick="formatText('bold')"><strong>Bold</strong></button>
                    <button type="button" class="btn btn-light btn-sm" onclick="formatText('italic')"><em>Italic</em></button>
                    <button type="button" class="btn btn-light btn-sm" onclick="formatText('underline')"><u>Underline</u></button>
                    <button type="button" class="btn btn-light btn-sm" onclick="formatText('inline-code')">Inline Code</button>
                    <button type="button" class="btn btn-light btn-sm" onclick="formatText('code-block')">Code Block</button>
                </div>
                <textarea class="form-control" style="width:100%; height:100px;" id="body" placeholder="Write Text"></textarea>
            </div>
            <div class="form-group">
                <label for="image">Upload Image</label>
                <div class="image-upload-wrapper" id="imageUploadWrapper">
                    <input type="file" class="form-control-file" id="image">
                    <div class="upload-text">Drag and drop an image or click to select</div>
                </div>
                <img id="imgPreview" class="img-preview mt-2 img-fluid" src="#" alt="Image Preview" style="display: none;width:50%">
                <button id="clearImage" class="btn btn-secondary mt-2" style="display: none;">Clear Image</button>
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
     <div class="loader" style="display:none;"></div>

    <script src="https://www.gstatic.com/firebasejs/8.3.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.3.1/firebase-database.js"></script>
    <script>
        // Your Firebase configuration
var firebaseConfig = {
    apiKey: "AIzaSyAse483WtEgu5ODHwmJT_QwHzPBeN-tCMs",
    authDomain: "aust-overflow.firebaseapp.com",
    databaseURL: "https://aust-overflow-default-rtdb.firebaseio.com",
    projectId: "aust-overflow",
    storageBucket: "aust-overflow.appspot.com",
    messagingSenderId: "597727996516",
    appId: "1:597727996516:web:b61deb25e126e0ecd4cd71"
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);

// Access session variables from Razor view and embed in JavaScript
var userId = '@userId';
var userName = '@userName';

// Function to format text (for demonstration)
function formatText(command) {
    var textarea = document.getElementById('body');
    var selectedText = textarea.value.substring(textarea.selectionStart, textarea.selectionEnd);
    var beforeText = textarea.value.substring(0, textarea.selectionStart);
    var afterText = textarea.value.substring(textarea.selectionEnd, textarea.value.length);

    switch (command) {
        case 'bold':
            textarea.value = beforeText + "<strong>" + selectedText + "</strong>" + afterText;
            break;
        case 'italic':
            textarea.value = beforeText + "<em>" + selectedText + "</em>" + afterText;
            break;
        case 'underline':
            textarea.value = beforeText + "<u>" + selectedText + "</u>" + afterText;
            break;
        case 'inline-code':
            textarea.value = beforeText + "<code>" + selectedText + "</code>" + afterText;
            break;
        case 'code-block':
            textarea.value = beforeText + "<pre><code>" + selectedText + "</code></pre>" + afterText;
            break;
        default:
            break;
    }
        }
        // Function to show loader
        function showLoader() {
            document.querySelector('.loader').style.display = 'block';
        }

        // Function to hide loader
        function hideLoader() {
            document.querySelector('.loader').style.display = 'none';
        }

// Image preview functionality
document.getElementById('image').addEventListener('change', function(event) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const imgPreview = document.getElementById('imgPreview');
            const clearButton = document.getElementById('clearImage');
            imgPreview.src = e.target.result;
            imgPreview.style.display = 'block';
            clearButton.style.display = 'block';
        };
        reader.readAsDataURL(file);
    }
});

// Clear image preview functionality
document.getElementById('clearImage').addEventListener('click', function() {
    const imgPreview = document.getElementById('imgPreview');
    const fileInput = document.getElementById('image');
    const clearButton = document.getElementById('clearImage');

    // Clear the image preview
    imgPreview.src = '#';
    imgPreview.style.display = 'none';

    // Reset the file input
    fileInput.value = '';

    // Hide the clear button
    clearButton.style.display = 'none';
});

// Form submission handler
 document.getElementById('questionForm').addEventListener('submit', function (event) {

     event.preventDefault();
     imgPreview.style.display = 'none';
     showLoader(); 

    const questionName = document.getElementById('questionName').value;
    const tagline = document.getElementById('tagline').value;
    const body = document.getElementById('body').value;
    const image = document.getElementById('image').files[0];

    let imageUrl = "";

    if (image) {
        const reader = new FileReader();
        reader.onload = function(e) {
            imageUrl = e.target.result;
            savePostToFirebase(questionName, tagline, body, userId, imageUrl);
        };
        reader.readAsDataURL(image);
    } else {
        savePostToFirebase(questionName, tagline, body, userId, imageUrl);
    }

    document.getElementById('questionForm').reset();
    document.getElementById('imgPreview').style.display = 'none';
});

// Function to save post to Firebase
function savePostToFirebase(questionName, tagline, body, userId, imageUrl) {
    // Push the postData to Firebase under 'posts' node
    const newPostRef = firebase.database().ref().child('posts').push();
    const newPostKey = newPostRef.key; // Get the generated key (postId)

    // Save postData under the new postId
    return newPostRef.set({
        Title: questionName,
        taglines: tagline,
        content: body,
        userId: userId,
        imageUrl: imageUrl
    })
    .then(() => {
        // Create an 'answers' child node under the new postId
        return firebase.database().ref(`posts/${newPostKey}/answers`).push({
            userId: "userId1", // Example userId
            name: "John Doe", // Example user name
            answer: "This is an example answer."
        });
    })
    .then(() => {
        hideLoader(); // Hide loader after successful submission
        alert('Post submitted successfully!');
        document.getElementById('questionForm').reset();
        document.getElementById('imgPreview').style.display = 'none';
    })
    .catch(error => {
        alert('Error submitting post: ' + error.message);
    });
}
    </script>
</body>
</html>
