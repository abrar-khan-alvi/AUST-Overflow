@{
    var userId = Session["UserId"];
    var userName = Session["UserName"];
    ViewBag.Title = "Recent Posts";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Posts</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://www.gstatic.com/firebasejs/8.3.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.3.1/firebase-database.js"></script>
</head>
<body>
    <div class="container">
        <h1 class="text-center">Your Posts</h1>
        <div id="postsList" class="list-group"></div>
    </div>

    <!-- Initialize Firebase -->
    <script>
        var firebaseConfig = {
            apiKey: "AIzaSyAse483WtEgu5ODHwmJT_QwHzPBeN-tCMs",
            authDomain: "aust-overflow.firebaseapp.com",
            databaseURL: "https://aust-overflow-default-rtdb.firebaseio.com",
            projectId: "aust-overflow",
            storageBucket: "aust-overflow.appspot.com",
            messagingSenderId: "597727996516",
            appId: "1:597727996516:web:b61deb25e126e0ecd4cd71"
        };

        firebase.initializeApp(firebaseConfig);

        var userId = '@userId';

        function loadUserPosts() {
            var postsRef = firebase.database().ref('posts').orderByChild('userId').equalTo(userId);
            postsRef.on('value', function(snapshot) {
                var postsList = document.getElementById('postsList');
                postsList.innerHTML = '';

                snapshot.forEach(function(childSnapshot) {
                    var post = childSnapshot.val();
                    var postId = childSnapshot.key;
                    var postElement = document.createElement('div');
                    postElement.classList.add('list-group-item');
                    postElement.innerHTML = `
                        <h5>${post.Title}</h5>
                        <p>${post.content}</p>
                        ${post.imageUrl ? `<img src="${post.imageUrl}" class="img-fluid" style="max-width: 200px;" />` : ''}
                        <button class="btn btn-primary btn-sm mt-2" onclick="editPost('${postId}')">Edit</button>
                        <button class="btn btn-danger btn-sm mt-2" onclick="deletePost('${postId}')">Delete</button>
                    `;
                    postsList.appendChild(postElement);
                });
            });
        }

        function editPost(postId) {
            // Redirect to an edit page or open an edit modal (you need to create this functionality)
            window.location.href = `/Question/EditPost/${postId}`;
        }

        function deletePost(postId) {
            if (confirm('Are you sure you want to delete this post?')) {
                firebase.database().ref('posts/' + postId).remove()
                    .then(function() {
                        alert('Post deleted successfully.');
                        loadUserPosts();
                    })
                    .catch(function(error) {
                        alert('Error deleting post: ' + error.message);
                    });
            }
        }

        loadUserPosts();
    </script>
</body>
</html>
